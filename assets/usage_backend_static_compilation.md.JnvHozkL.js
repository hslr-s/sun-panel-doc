import{_ as s,o as a,c as i,R as e}from"./chunks/framework.BQ8N8sdH.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"usage/backend_static_compilation.md","filePath":"usage/backend_static_compilation.md","lastUpdated":1705499875000}'),n={name:"usage/backend_static_compilation.md"},t=e(`<h2 id="compiling-static-resources-into-go-files-and-packaging-them-into-executable" tabindex="-1">Compiling Static Resources into Go Files and Packaging Them into Executable <a class="header-anchor" href="#compiling-static-resources-into-go-files-and-packaging-them-into-executable" aria-label="Permalink to &quot;Compiling Static Resources into Go Files and Packaging Them into Executable&quot;">​</a></h2><p>Original tutorial source: <a href="https://blog.enianteam.com/u/sun/content/211" target="_blank" rel="noreferrer">https://blog.enianteam.com/u/sun/content/211</a></p><blockquote><p>In order to simplify deployment and reduce the chances of errors, we will bundle frontend files into the executable file. The final program will have only one executable file after publication.</p></blockquote><h3 id="_1-installation" tabindex="-1">1. Installation <a class="header-anchor" href="#_1-installation" aria-label="Permalink to &quot;1. Installation&quot;">​</a></h3><p><strong>Note: Include <code>...</code> as shown in the commands.</strong></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/go-bindata/go-bindata/...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/elazarl/go-bindata-assetfs/...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For go version &gt;= 1.17, use the intsall command</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/go-bindata/go-bindata/...@latest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/elazarl/go-bindata-assetfs/...@latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-after-successful-installation-add-gopath-bin-to-the-environment-variable" tabindex="-1">2. After successful installation, add <code>GOPATH/bin</code> to the environment variable <a class="header-anchor" href="#_2-after-successful-installation-add-gopath-bin-to-the-environment-variable" aria-label="Permalink to &quot;2. After successful installation, add \`GOPATH/bin\` to the environment variable&quot;">​</a></h3><p>Refer to the respective system&#39;s environment variable configuration.</p><h3 id="_3-compress-static-files-into-the-asset-directory" tabindex="-1">3. Compress static files into the asset directory <a class="header-anchor" href="#_3-compress-static-files-into-the-asset-directory" aria-label="Permalink to &quot;3. Compress static files into the asset directory&quot;">​</a></h3><p>The following command may encounter errors in <code>powershell</code> on Windows, so you can use <code>cmd</code> to execute it.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Development environment, not actually compiling all files, so changes to static files take effect immediately</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go-bindata-assetfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -debug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o=assets/bindata.go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pkg=assets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> static/...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> view/...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Multiple directories</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go-bindata-assetfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -debug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o=assets/bindata.go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pkg=assets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets/...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Production environment, need to recompile after modifying static files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go-bindata-assetfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o=assets/bindata.go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pkg=assets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets/...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>Remove <code>-debug</code> in the production environment.</p></blockquote><h4 id="reference-articles" tabindex="-1">Reference Articles <a class="header-anchor" href="#reference-articles" aria-label="Permalink to &quot;Reference Articles&quot;">​</a></h4><p>Go | Packaging Static Files in Go Language and How to Use Them with Gin <a href="https://www.jianshu.com/p/a7f5885679ef" target="_blank" rel="noreferrer">https://www.jianshu.com/p/a7f5885679ef</a></p><p>[golang] Installing and Using go-bindata for Embedding Static Resources in Go <a href="https://www.cnblogs.com/landv/p/11577213.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/landv/p/11577213.html</a></p>`,15),l=[t];function o(r,p,h,c,d,k){return a(),i("div",null,l)}const u=s(n,[["render",o]]);export{b as __pageData,u as default};
