import{_ as a,c as e,o,a4 as r}from"./chunks/framework.B8GHgGzb.js";const f=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"zh_cn/faq/faq.md","filePath":"zh_cn/faq/faq.md","lastUpdated":1721812179000}'),t={name:"zh_cn/faq/faq.md"},c=r('<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>如果以下问题仍然无法解决你的问题，可以通过 <a href="/zh_cn/introduce/author_groups.html">社群</a> 寻求帮助</p></div><h2 id="登录时效是多久-总是让我频繁登录" tabindex="-1">登录时效是多久，总是让我频繁登录 <a class="header-anchor" href="#登录时效是多久-总是让我频繁登录" aria-label="Permalink to &quot;登录时效是多久，总是让我频繁登录&quot;">​</a></h2><p><code>v1.4.0</code> 及版本之前版本登录一次的时效是72小时，然后72小时内只要访问一次就会再次续期72小时。<code>v1.4.0</code> 以后版本默认改为了168小时（7天），仍保留续期机制，并支持在 <a href="./../advanced/config.html">配置文件</a> 自行配置过期时长。打开配置文件在 <code>base</code> 块下找到 <code>token_expires=168</code> 将 <code>168</code> 改为你想设置的小时数值，保存之后，重启项目后生效。</p><h2 id="导入导出是备份功能吗" tabindex="-1">导入导出是备份功能吗 <a class="header-anchor" href="#导入导出是备份功能吗" aria-label="Permalink to &quot;导入导出是备份功能吗&quot;">​</a></h2><p>导入导出不是备份功能，它只能导出图标卡片基本配置的json格式文件，不能导出图片文件，目前项目没有自带的备份功能，后期会考虑加入。</p><h2 id="docker-版本升级后数据丢失了" tabindex="-1">docker 版本升级后数据丢失了 <a class="header-anchor" href="#docker-版本升级后数据丢失了" aria-label="Permalink to &quot;docker 版本升级后数据丢失了&quot;">​</a></h2><ol><li>在v1.4.0版本做了docker精简了挂载目录，请严格按照教程升级。</li><li>挂载目录不正确，请检查路径并区分大小写</li></ol><h2 id="项目的-docker-卡片显示异常" tabindex="-1">项目的 docker 卡片显示异常 <a class="header-anchor" href="#项目的-docker-卡片显示异常" aria-label="Permalink to &quot;项目的 docker 卡片显示异常&quot;">​</a></h2><p>请使用docker管理工具检查是否删除了该容器，或者升级了容器，如果升级了该容器，卡片绑定的旧容器ID将不可用。可以编辑卡片重新选择容器。</p><h2 id="linux-二进制版本无法运行" tabindex="-1">Linux 二进制版本无法运行 <a class="header-anchor" href="#linux-二进制版本无法运行" aria-label="Permalink to &quot;Linux 二进制版本无法运行&quot;">​</a></h2><p>在 github 的 <a href="https://github.com/hslr-s/sun-panel/releases" target="_blank" rel="noreferrer">releases</a> 下载的二进制Linux版本无法运行，可以尝试下载带有 <code>musl</code> 标记的版本运行。</p><h2 id="内外网环境-模式-是什么-能否只显示对应的图标卡片" tabindex="-1">内外网环境（模式）是什么；能否只显示对应的图标卡片 <a class="header-anchor" href="#内外网环境-模式-是什么-能否只显示对应的图标卡片" aria-label="Permalink to &quot;内外网环境（模式）是什么；能否只显示对应的图标卡片&quot;">​</a></h2><p>作者所谓的内网环境和外网环境可以理解为，我们当前所处于的真实环境。</p><p>比如说项目（Sun-Panel）部署机在家，我们目前也在家访问项目，那么我们可以将家中电脑的 Sun-Panel 环境设置为内网环境。而将在家以外常用电脑的 Sun-Panel 环境设置为外网环境。不需要频繁切换，也不怕混淆。</p><p>基于以上理解考虑到处于内网环境也需要访问外网地址或者相反，所以没有对图标的内外网环境区分显示。</p><h2 id="自定义页脚不能执行js-script标签-代码" tabindex="-1">自定义页脚不能执行js（script标签）代码 <a class="header-anchor" href="#自定义页脚不能执行js-script标签-代码" aria-label="Permalink to &quot;自定义页脚不能执行js（script标签）代码&quot;">​</a></h2><p>由于框架安全限制，暂时不支持，后期将找办法支持。暂时可以通过 <a href="./../advanced/custom_js_css.html">自定义js</a> 来实现此功能。</p><h2 id="docker-版本系统监控挂载宿主机磁盘教程" tabindex="-1">docker 版本系统监控挂载宿主机磁盘教程 <a class="header-anchor" href="#docker-版本系统监控挂载宿主机磁盘教程" aria-label="Permalink to &quot;docker 版本系统监控挂载宿主机磁盘教程&quot;">​</a></h2><p>用挂载的方式将磁盘挂载到容器的目录中，例如:<code>-v /mnt/usb2-2:/sata1</code>。其中 <code>/mnt/usb2-2</code> 为宿主机路径，<code>/sata1</code> 为映射的路径，名字可以自己随便定义。</p><h2 id="设置为浏览器首页" tabindex="-1">设置为浏览器首页 <a class="header-anchor" href="#设置为浏览器首页" aria-label="Permalink to &quot;设置为浏览器首页&quot;">​</a></h2><p>想要实现打开新窗口为本项目，项目目前没有浏览器插件版本，可以在浏览器的插件市场中安装一个名为：<code>custom New Tab</code> 等类似插件，然后在插件中设置你的导航页地址为默认首页即可。还可以将项目地址在浏览器中作为应用安装，这样可以把网站图标放在开始栏和桌面，一点及达。</p>',22),d=[c];function s(l,n,i,h,u,p){return o(),e("div",null,d)}const k=a(t,[["render",s]]);export{f as __pageData,k as default};
